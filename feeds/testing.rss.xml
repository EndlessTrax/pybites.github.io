<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyBites - Testing</title><link>https://pybit.es/</link><description>A Community that Masters Python through Code Challenges</description><lastBuildDate>Wed, 25 Jul 2018 21:52:00 +0200</lastBuildDate><item><title>Why Python is Great for Test Automation</title><link>https://pybit.es/python-test-automation.html</link><description>&lt;p&gt;Testing in Python is consistently growing in popularity. In this article our friend Andrew Knight from Automation Panda walks through 10 reasons why Python is great for Test Automation.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Knight</dc:creator><pubDate>Wed, 25 Jul 2018 21:52:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2018-07-25:/python-test-automation.html</guid><category>guest</category><category>test</category><category>testing</category><category>automation</category><category>tdd</category><category>selenium</category><category>pytest</category><category>IDE</category></item><item><title>Enough pytest to be Dangerous, 10 Things I Learned Writing Tests for 100 Python (Bites of Py) Exercises</title><link>https://pybit.es/pytest-coding-100-tests.html</link><description>&lt;p&gt;We hit 100 Bite exercises on &lt;a href="https://codechalleng.es/"&gt;our Code Platform&lt;/a&gt; and that means we have written tests for 100 exercises. In this article I share 10 things I learned about writing test code and pytest.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 07 Jun 2018 16:30:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2018-06-07:/pytest-coding-100-tests.html</guid><category>pytest</category><category>learning</category><category>mock</category><category>parametrize</category><category>capfd</category><category>fixtures</category></item><item><title>All You Need to Know to Start Using Fixtures in Your pytest Code</title><link>https://pybit.es/pytest-fixtures.html</link><description>&lt;p&gt;Setting up test cases for code that manage data can be challenging but it's an important skill to reliably test your code. You might have heard of the setup and teardown methods in &lt;code&gt;unittest&lt;/code&gt;. In &lt;code&gt;pytest&lt;/code&gt; you use &lt;em&gt;fixtures&lt;/em&gt; and as you will discover in this article they are actually not that hard to set up. Fixtures have been labelled &lt;em&gt;pytest's killer feature&lt;/em&gt; so let's explore them in this article using a practical example.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 15 Mar 2018 13:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2018-03-15:/pytest-fixtures.html</guid><category>pytest</category><category>fixtures</category><category>testing</category><category>refactoring</category><category>pytest-cov</category><category>coverage</category></item><item><title>Parsing Twitter Geo Data and Mocking API Calls by Example</title><link>https://pybit.es/twitter-api-geodata-mocking.html</link><description>&lt;p&gt;&lt;a href="https://twitter.com/anthonypjshaw/status/875275923930480641"&gt;"Is this Bob or Julian?!"&lt;/a&gt; ... yeah tweeting from our shared &lt;a href="https://twitter.com/pybites"&gt;@pybites Twitter account&lt;/a&gt; can be confusing! So I made a little script to parse the location of our tweets. Then I extended it to make it testable. I wrote a &lt;a href="https://pybit.es/codechallenge14.html"&gt;decorator&lt;/a&gt; to cache a couple of API outputs to be used with the unittest.mock patch decorator I learned about. A simple script turned into a good learning exercise.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Sat, 17 Jun 2017 23:55:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-06-17:/twitter-api-geodata-mocking.html</guid><category>twitter</category><category>API</category><category>mock</category><category>geo</category><category>data</category><category>unittest</category><category>pickle</category><category>tweepy</category><category>testing</category><category>100days</category></item></channel></rss>