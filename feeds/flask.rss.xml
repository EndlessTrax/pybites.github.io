<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyBites - Flask</title><link>https://pybit.es/</link><description>We Create Rockstar Python Developers</description><lastBuildDate>Fri, 21 Jul 2017 21:57:00 +0200</lastBuildDate><item><title>Step-by-Step Guide on Deploying a Simple Flask App to Heroku</title><link>https://pybit.es/deploy-flask-heroku.html</link><description>&lt;p&gt;A step-by-step guide on deploying a simple flask app to Heroku.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julian</dc:creator><pubDate>Fri, 21 Jul 2017 21:57:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-07-21:/deploy-flask-heroku.html</guid><category>Flask</category><category>python</category><category>beginner</category><category>sessions</category><category>learning</category><category>code</category><category>Heroku</category></item><item><title>Flask Web Server Port Mapping</title><link>https://pybit.es/flask-ports.html</link><description>&lt;p&gt;A quick post on Flask App port mapping&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julian</dc:creator><pubDate>Sat, 01 Jul 2017 20:31:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-07-01:/flask-ports.html</guid><category>Flask</category><category>python</category><category>beginner</category><category>learning</category><category>ports</category><category>apps</category></item><item><title>Flask Sessions</title><link>https://pybit.es/flask-sessions.html</link><description>&lt;p&gt;In this quick post I discuss Flask Sessions and provide a few use cases.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julian</dc:creator><pubDate>Fri, 02 Jun 2017 21:57:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-06-02:/flask-sessions.html</guid><category>Flask</category><category>python</category><category>beginner</category><category>sessions</category><category>learning</category><category>examples</category><category>code</category></item><item><title>Building a Simple Birthday App with Flask-SQLAlchemy</title><link>https://pybit.es/flask-sqlalchemy-bday-app.html</link><description>&lt;p&gt;In this article I teach you how to get started with Flask-SQLAlchemy. I will set up a model, create the DB, retrieve birthdays from FB and import them into the DB. Lastly I will query the birthdays by date range.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 11 May 2017 11:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-05-11:/flask-sqlalchemy-bday-app.html</guid><category>Flask-SQLAlchemy</category><category>SQLAlchemy</category><category>Flask</category><category>Facebook</category><category>birthday</category><category>calendar</category><category>icalendar</category><category>datetime</category></item><item><title>Simple Flask app to compare the weather of 2 cities</title><link>https://pybit.es/flask-simple-weather-app.html</link><description>&lt;p&gt;In this post I show you how to build a simple Flask app to compare the weather of 2 cities using the &lt;a href="https://openweathermap.org"&gt;OpenWeatherMap API&lt;/a&gt;. Maybe this aids you in solving &lt;a href="http://pybit.es/codechallenge15.html"&gt;this week's challenge&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Thu, 20 Apr 2017 09:40:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-20:/flask-simple-weather-app.html</guid><category>Flask</category><category>weather</category><category>API</category><category>OpenWeatherMap</category><category>learning</category><category>Heroku</category><category>pytz</category><category>deploy</category><category>Jinja</category><category>CSS</category></item><item><title>Beginning Flask</title><link>https://pybit.es/beginning-flask.html</link><description>&lt;p&gt;In this post I cover the basics of Flask in language that anyone can understand.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julian</dc:creator><pubDate>Thu, 13 Apr 2017 15:00:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-13:/beginning-flask.html</guid><category>Flask</category><category>python</category><category>decorators</category><category>tutorial</category><category>learning</category></item><item><title>Flask for Loops - Printing Dict Data</title><link>https://pybit.es/flask-for-loop.html</link><description>&lt;p&gt;In this post I demo how to create an extremely simple Flask app that prints the contents of a Dict to a web page.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julian</dc:creator><pubDate>Thu, 06 Apr 2017 20:38:00 +0200</pubDate><guid isPermaLink="false">tag:pybit.es,2017-04-06:/flask-for-loop.html</guid><category>Flask</category><category>loops</category><category>python</category><category>decorators</category><category>tutorial</category><category>learning</category></item><item><title>Simple API Part 2 - Building a Deep Work Logger with Flask, Slack and Google Docs</title><link>https://pybit.es/flask-api-part2.html</link><description>&lt;p&gt;After &lt;a href="http://pybit.es/simple-flask-api.html"&gt;Simple API - part 1&lt;/a&gt; a more practical app in this part 2 tutorial: a Deep Work logger integrating Google docs and Slack, including deployment of the app to Heroku.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Fri, 10 Mar 2017 18:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-10:/flask-api-part2.html</guid><category>Flask</category><category>Slack</category><category>Google docs</category><category>Heroku</category><category>APIs</category><category>pygsheets</category><category>git</category><category>commands</category><category>productivity</category><category>learning</category></item><item><title>How To Build a Simple API with Flask and Unit Test it</title><link>https://pybit.es/simple-flask-api.html</link><description>&lt;p&gt;In this post I will create a simple API with Flask and test it with curl and unit testing its HTTP methods.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob</dc:creator><pubDate>Fri, 03 Mar 2017 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:pybit.es,2017-03-03:/simple-flask-api.html</guid><category>APIs</category><category>Flask</category><category>REST</category><category>curl</category><category>testing</category><category>unittest</category><category>inventory</category></item></channel></rss>